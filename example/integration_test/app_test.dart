import 'dart:convert';
import 'dart:typed_data';

import 'package:flutter_test/flutter_test.dart';
import 'package:integration_test/integration_test.dart';

import 'package:cloudproof/cloudproof.dart';
import 'package:cloudproof_demo/main.dart' as app;

import '../../test/findex/in_memory_test.dart';

void main() {
  IntegrationTestWidgetsFlutterBinding.ensureInitialized();

  group('end-to-end test', () {
    testWidgets('run app and check link over cloudproof static lib',
        (tester) async {
      app.main();

      final encrypted = base64Decode(
          "vpEkgm3NR3vfUM9ekk77XPrCDMF8YaEJLoGnD0ufz2AUoFTCLZdr3Xn0g3fSdcvm925G562Za5Q95NCLxpxTbtRrU7TMerSHl0Om/Qqt/ZQBAOECpre0gaolk7AlacUHfnKGAkQ8fe4q/3/aB0A/y0/NAGjWWFXKNwIA9tiN+cpsI5+gIv/EubCuhHLUURrzUaNgiYOhIaggtu3p4zQ7Ajv34qU=");

      final key = base64Decode(
          "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");

      final plaintext = base64Decode("TG93U2VjcmV0RmluUGxhaW50ZXh0");

      final result = CoverCrypt.decrypt(key, encrypted);

      expect(result.plaintext, equals(plaintext));

      final findexKey = FindexKey(base64Decode("6hb1TznoNQFvCWisGWajkA=="));
      await testFunction(findexKey, "Some Label");

      print("findex and cover_crypt OK");
    });
  });
}
